import React, { useEffect, useRef } from 'react'

export default function Map({ options, onMount, className }) {
  // debugger
  const ref = useRef()

    // Accepts an array of locations and links, and the map, and places
    // them on the map with a link to open additional information.
    const addMarkers = links => map => {
      console.log("Running addMarkers ", links)
      links.forEach((link, index) => {
        console.log(link, index)
        const marker = new window.google.maps.Marker({
          map,
          position: link.coords,
          label: `${index + 1}`,
          title: link.title,
        })
        marker.addListener(`click`, () => {
          window.location.href = link.url
        })
        // debugger
      })
      // debugger
    }

  useEffect(() => {

    const onLoad = () => {
      const map = new window.google.maps.Map(ref.current, options)
      if (typeof onMount === 'function') {
        // debugger
        onMount(map)
      }
    }
    if (!window.google) {
      const script = document.createElement('script')
      // debugger
      script.type="text/javascript"
      script.src =
        "https://maps.googleapis.com/maps/api/js?key=" +
        process.env.REACT_APP_GOOGLE_KEY
      const headScript = document.getElementsByTagName('script')[0]
      headScript.parentNode.insertBefore(script, headScript)
      script.addEventListener('load', onLoad)
      // const map = new window.google.maps.Map(ref.current, options)
      // debugger
      return () => script.removeEventListener('load', onLoad)
    } // else onLoad()
  }, [onMount, options])

  return (
    <div
      style={{ width: '100%', height: '400px', margin: '1em 0', borderRadius: '0.5em' }}
      {...{ref}}
    />

  )
}
